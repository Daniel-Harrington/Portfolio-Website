import RendererStats from"@xailabs/three-renderer-stats";import*as dat from"dat.gui";import*as THREE from"three";import{Interaction}from"three.interaction";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import Stats from"three/examples/jsm/libs/stats.module";import{TWEEN}from"three/examples/jsm/libs/tween.module.min";import"./style.css";const stats=Stats(),rendererStats=new RendererStats;rendererStats.domElement.style.position="absolute",rendererStats.domElement.style.left="0px",rendererStats.domElement.style.bottom="0px",document.body.appendChild(rendererStats.domElement),document.body.appendChild(stats.dom);const gui=new dat.GUI,fontJson=require("three/examples/fonts/gentilis_bold.typeface.json"),font=new THREE.Font(fontJson),textureLoader=new THREE.TextureLoader,waveNormalTexture=textureLoader.load("./textures/Glass_Window_003_normal.jpg");waveNormalTexture.wrapS=waveNormalTexture.wrapT=THREE.RepeatWrapping,waveNormalTexture.repeat.set(5,35);const canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,waveGeometry=new THREE.PlaneBufferGeometry(1e3,7e3,20,140),box1Geometry=new THREE.BoxBufferGeometry(1200,800,100),text1Geometry=new THREE.TextBufferGeometry("Hello",{font,size:80,height:5,curveSegments:12,bevelEnabled:!0,bevelThickness:8,bevelSize:8,bevelOffset:0,bevelSegments:5}),waveMaterial=new THREE.MeshStandardMaterial;waveMaterial.metalness=.2,waveMaterial.roughness=.8,waveMaterial.color=new THREE.Color(16711680),waveMaterial.normalMap=waveNormalTexture,waveMaterial.wireframe=!1;const box1Material=new THREE.MeshStandardMaterial;box1Material.metalness=.2,box1Material.roughness=.8,box1Material.color=new THREE.Color("white"),box1Material.depthTest=!1;const text1Material=new THREE.MeshStandardMaterial,wave=new THREE.Mesh(waveGeometry,waveMaterial);scene.add(wave);const box1=new THREE.Mesh(box1Geometry,box1Material);scene.add(box1);const text1=new THREE.Mesh(text1Geometry,text1Material),pointLight1=new THREE.DirectionalLight;pointLight1.position.x=23,pointLight1.position.y=-20.77,pointLight1.position.z=601,pointLight1.decay=1,pointLight1.intensity=6,scene.add(pointLight1);const light1=gui.addFolder("Light 1");light1.add(pointLight1.position,"y").min(-1e3).max(1e3).step(.01),light1.add(pointLight1.position,"x").min(-1e3).max(1e3).step(.01),light1.add(pointLight1.position,"z").min(-1e3).max(2e3).step(.01),light1.add(pointLight1,"intensity").min(0).max(100).step(.01);const pointLightHelper=new THREE.PointLightHelper(pointLight1,1);scene.add(pointLightHelper);const light1Color={color:16711680};light1.addColor(light1Color,"color").onChange((()=>{pointLight1.color.set(light1Color.color)}));const sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const camera=new THREE.PerspectiveCamera(120,sizes.width/sizes.height,10,2e3);camera.position.x=0,camera.position.y=50,camera.position.z=400,scene.add(camera);const renderer=new THREE.WebGLRenderer({canvas,alpha:!1});function render(){renderer.render(scene,camera)}renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));const interaction=new Interaction(renderer,scene,camera);box1.cursor="pointer",box1.on("touchstart",(e=>{console.log(e)})),box1.on("touchmove",(e=>{console.log(e)}));let tweenInProgress=!1,box1Clicked=!1;box1.translateX(800),box1.rotateY(-Math.PI/6);const box1DefaultPos=new THREE.Vector3(800,0,-1500),box1Click=()=>{let e=box1.position;const t=new THREE.Vector3(0,50,0);0==tweenInProgress&&(0==box1Clicked?(new TWEEN.Tween(e).to(t,600).easing(TWEEN.Easing.Cubic.In).onStart((()=>{tweenInProgress=!0})).start(),new TWEEN.Tween(box1.rotation).to({y:Math.PI},300).easing(TWEEN.Easing.Cubic.Out).onComplete((()=>{tweenInProgress=!1,box1Clicked=!0})).start()):new TWEEN.Tween(e).to(box1DefaultPos,600).easing(TWEEN.Easing.Cubic.In).onStart((()=>{tweenInProgress=!0})).onComplete((()=>{new TWEEN.Tween(box1.rotation).to({y:2*Math.PI-Math.PI/6},300).easing(TWEEN.Easing.Cubic.Out).onComplete((()=>{tweenInProgress=!1,box1Clicked=!1})).start()})).start())};box1.on("mousedown",(e=>{box1Click()})),box1.on("mouseover",(e=>{box1Mouseover()})),box1.on("mouseout",(e=>{box1Mouseout()})),wave.rotateX(-Math.PI/2),wave.rotateY(Math.PI/8),wave.rotateZ(-Math.PI/2),wave.translateZ(-400),box1.translateZ(-1500);const clock=new THREE.Clock,tick=()=>{const e=clock.getElapsedTime(),t=wave.geometry.attributes.position;box1.position.y+=.25*Math.sin(e);const o=new THREE.Vector3;for(let n=0,r=t.count;n<r;n++){o.fromBufferAttribute(t,n);const r=100*Math.sin(o.y/-200+e);t.setZ(n,r)}t.needsUpdate=!0,box1.needsUpdate=!0,TWEEN.update(),render(),stats.update(),rendererStats.update(renderer),window.requestAnimationFrame(tick)};tick();