import RendererStats from"@xailabs/three-renderer-stats";import*as dat from"dat.gui";import*as THREE from"three";import{Interaction}from"three.interaction";import Stats from"three/examples/jsm/libs/stats.module";import{TWEEN}from"three/examples/jsm/libs/tween.module.min";import"./style.css";const stats=Stats(),rendererStats=new RendererStats;rendererStats.domElement.style.position="absolute",rendererStats.domElement.style.left="0px",rendererStats.domElement.style.bottom="0px",document.body.appendChild(rendererStats.domElement),document.body.appendChild(stats.dom);const gui=new dat.GUI,fontJson=require("three/examples/fonts/gentilis_bold.typeface.json"),font=new THREE.Font(fontJson),textureLoader=new THREE.TextureLoader,waveNormalTexture=textureLoader.load("./textures/Glass_Window_003_normal.jpg");waveNormalTexture.wrapS=waveNormalTexture.wrapT=THREE.RepeatWrapping,waveNormalTexture.repeat.set(5,35);const canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,waveGeometry=new THREE.PlaneBufferGeometry(1e3,7e3,20,140),contentBoxGeometry=new THREE.BoxBufferGeometry(1600,800,200),waveMaterial=new THREE.MeshStandardMaterial;waveMaterial.metalness=.2,waveMaterial.roughness=.8,waveMaterial.color=new THREE.Color(16711680),waveMaterial.normalMap=waveNormalTexture,waveMaterial.wireframe=!1;const contentBoxMaterial=new THREE.MeshStandardMaterial;contentBoxMaterial.metalness=1,contentBoxMaterial.roughness=1,contentBoxMaterial.normalMap=waveNormalTexture,contentBoxMaterial.depthTest=!1;const wave=new THREE.Mesh(waveGeometry,waveMaterial);scene.add(wave);const contentBox=new THREE.Mesh(contentBoxGeometry,contentBoxMaterial);contentBox.translateZ(-1500);const contentBoxes=[],contentBox1=contentBox.clone();scene.add(contentBox1),contentBoxes.push(contentBox1);let contentBox1Clicked=!1;contentBox1.translateX(2e3),contentBox1.rotateY(-Math.PI/3);const contentBox1DefaultRot=contentBox1.rotation.clone(),contentBox1DefaultPos=contentBox1.position.clone(),contentBox2=contentBox.clone();scene.add(contentBox2),contentBoxes.push(contentBox2);let contentBox2Clicked=!1;const contentBox2DefaultRot=contentBox2.rotation.clone(),contentBox2DefaultPos=contentBox2.position.clone();contentBoxes.forEach((e=>{scene.add(e)}));const pointLight1=new THREE.DirectionalLight;pointLight1.position.x=23,pointLight1.position.y=-20.77,pointLight1.position.z=601,pointLight1.decay=1,pointLight1.intensity=6,scene.add(pointLight1);const light1=gui.addFolder("Light 1");light1.add(pointLight1.position,"y").min(-1e3).max(1e3).step(.01),light1.add(pointLight1.position,"x").min(-1e3).max(1e3).step(.01),light1.add(pointLight1.position,"z").min(-1e3).max(2e3).step(.01),light1.add(pointLight1,"intensity").min(0).max(100).step(.01);const pointLightHelper=new THREE.PointLightHelper(pointLight1,1);scene.add(pointLightHelper);const light1Color={color:16711680};light1.addColor(light1Color,"color").onChange((()=>{pointLight1.color.set(light1Color.color)}));const sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const camera=new THREE.PerspectiveCamera(120,sizes.width/sizes.height,10,2e3);camera.position.x=0,camera.position.y=50,camera.position.z=400,scene.add(camera);const renderer=new THREE.WebGLRenderer({canvas,alpha:!1});function render(){renderer.render(scene,camera)}renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));const interaction=new Interaction(renderer,scene,camera);contentBoxes.forEach((e=>{e.cursor="pointer",e.on("touchstart",(e=>{console.log(e)})),e.on("touchmove",(e=>{console.log(e)}))}));let tweenInProgress=!1;const contentboxOnClick=(e,t,n,o)=>{let a=e.position;const i=new THREE.Vector3(0,50,0);0==tweenInProgress?0==o?(console.log("got here"),new TWEEN.Tween(a).to(i,400).easing(TWEEN.Easing.Cubic.In).onStart((()=>{tweenInProgress=!0})).start(),new TWEEN.Tween(e.rotation).to({y:Math.PI},300).easing(TWEEN.Easing.Cubic.Out).onComplete((()=>{tweenInProgress=!1,o=!0})).start()):new TWEEN.Tween(a).to(n,400).easing(TWEEN.Easing.Cubic.In).onStart((()=>{tweenInProgress=!0})).onComplete((()=>{new TWEEN.Tween(e.rotation).to({y:t.y},300).easing(TWEEN.Easing.Cubic.Out).onComplete((()=>{tweenInProgress=!1,o=!1})).start()})).start():contentboxOnClick(e,t,n,o)};contentBox1.on("mousedown",(e=>{contentboxOnClick(contentBox1,contentBox1DefaultRot,contentBox1DefaultPos,contentBox1Clicked),contentBox1Clicked=!contentBox1Clicked})),contentBox2.on("mousedown",(e=>{contentboxOnClick(contentBox2,contentBox2DefaultRot,contentBox2DefaultPos,contentBox2Clicked),contentBox2Clicked=!contentBox2Clicked})),wave.rotateX(-Math.PI/2),wave.rotateY(Math.PI/8),wave.rotateZ(-Math.PI/2),wave.translateZ(-400);const clock=new THREE.Clock,tick=()=>{const e=clock.getElapsedTime();contentBoxes.forEach((t=>{t.position.y+=-.25*Math.sin(e)}));const t=wave.geometry.attributes.position,n=new THREE.Vector3;for(let o=0,a=t.count;o<a;o++){n.fromBufferAttribute(t,o);const a=100*Math.sin(n.y/-200+e);t.setZ(o,a)}t.needsUpdate=!0,contentBox1.needsUpdate=!0,TWEEN.update(),render(),stats.update(),rendererStats.update(renderer),window.requestAnimationFrame(tick)};tick();